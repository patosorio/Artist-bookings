# Generated by Django 5.2.4 on 2025-09-04 16:22

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencies', '0002_alter_agency_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('venue_name', models.CharField(max_length=255)),
                ('venue_address', models.TextField()),
                ('venue_city', models.CharField(max_length=100)),
                ('venue_zipcode', models.CharField(blank=True, max_length=20)),
                ('venue_country', django_countries.fields.CountryField(max_length=2)),
                ('venue_type', models.CharField(choices=[('club', 'Club'), ('festival', 'Festival'), ('theater', 'Theater'), ('arena', 'Arena'), ('stadium', 'Stadium'), ('bar', 'Bar'), ('private', 'Private'), ('outdoor', 'Outdoor'), ('conference', 'Conference Center'), ('warehouse', 'Warehouse')], default='club', max_length=20)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum capacity of the venue', validators=[django.core.validators.MinValueValidator(1)])),
                ('tech_specs', models.TextField(blank=True, help_text='Technical specifications and equipment')),
                ('stage_dimensions', models.CharField(blank=True, help_text="Stage size (e.g., '12m x 8m')", max_length=100)),
                ('sound_system', models.CharField(blank=True, max_length=255)),
                ('lighting_system', models.CharField(blank=True, max_length=255)),
                ('has_parking', models.BooleanField(default=False, help_text='Venue has parking available')),
                ('has_catering', models.BooleanField(default=False, help_text='Venue provides catering services')),
                ('is_accessible', models.BooleanField(default=False, help_text='Venue is wheelchair accessible')),
                ('contact_name', models.CharField(blank=True, max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('company_name', models.CharField(blank=True, help_text='Operating company name', max_length=255)),
                ('company_address', models.TextField(blank=True, help_text='Company billing address')),
                ('company_city', models.CharField(blank=True, max_length=100)),
                ('company_zipcode', models.CharField(blank=True, max_length=20)),
                ('company_country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('website', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('agency', models.ForeignKey(help_text='The agency that manages this venue', on_delete=django.db.models.deletion.CASCADE, related_name='venues', to='agencies.agency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_venues', to='agencies.userprofile')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_venues', to='agencies.userprofile')),
            ],
            options={
                'verbose_name': 'Venue',
                'verbose_name_plural': 'Venues',
                'ordering': ['venue_name'],
                'indexes': [models.Index(fields=['agency', 'venue_name'], name='venues_venu_agency__800ca5_idx'), models.Index(fields=['agency', 'venue_city'], name='venues_venu_agency__450654_idx'), models.Index(fields=['agency', 'venue_type'], name='venues_venu_agency__51d8e1_idx'), models.Index(fields=['agency', 'capacity'], name='venues_venu_agency__7eeae4_idx'), models.Index(fields=['is_active'], name='venues_venu_is_acti_954204_idx'), models.Index(fields=['created_at'], name='venues_venu_created_0ec570_idx')],
                'unique_together': {('agency', 'venue_name', 'venue_city')},
            },
        ),
    ]
