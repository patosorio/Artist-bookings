# Generated by Django 5.2.4 on 2025-07-04 09:52

import django.core.validators
import django.db.models.deletion
import django_countries.fields
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencies', '0002_alter_agency_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist_name', models.CharField(max_length=255)),
                ('artist_type', models.CharField(choices=[('DJ', 'DJ'), ('BAND', 'Band'), ('MUSICIAN', 'Musician'), ('PRODUCER', 'Producer'), ('PAINTER', 'Painter'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('number_of_members', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('agency', models.ForeignKey(help_text='The agency that manages this artist', on_delete=django.db.models.deletion.CASCADE, related_name='artists', to='agencies.agency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_artists', to='agencies.userprofile')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_artists', to='agencies.userprofile')),
            ],
            options={
                'ordering': ['artist_name'],
            },
        ),
        migrations.CreateModel(
            name='ArtistMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('passport_name', models.CharField(max_length=255)),
                ('residential_address', models.CharField(max_length=500)),
                ('country_of_residence', django_countries.fields.CountryField(max_length=2)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('passport_number', models.CharField(max_length=50)),
                ('passport_expiry', models.DateField()),
                ('artist_fee', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('has_withholding', models.BooleanField(default=False)),
                ('withholding_percentage', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_method', models.CharField(choices=[('BANK_TRANSFER', 'Bank Transfer'), ('PAYPAL', 'PayPal'), ('CRYPTO', 'Crypto'), ('OTHER', 'Other')], default='BANK_TRANSFER', max_length=20)),
                ('bank_beneficiary', models.CharField(blank=True, max_length=255)),
                ('bank_account_number', models.CharField(blank=True, max_length=50)),
                ('bank_address', models.TextField(blank=True)),
                ('bank_swift_code', models.CharField(blank=True, max_length=50)),
                ('flight_affiliate_program', models.CharField(blank=True, max_length=100)),
                ('country_of_departure', django_countries.fields.CountryField(max_length=2)),
                ('agency', models.ForeignKey(help_text='The agency this member belongs to (for additional security)', on_delete=django.db.models.deletion.CASCADE, to='agencies.agency')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='artists.artist')),
            ],
            options={
                'ordering': ['passport_name'],
            },
        ),
        migrations.CreateModel(
            name='ArtistNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('color', models.CharField(choices=[('yellow', 'Yellow'), ('blue', 'Blue'), ('green', 'Green'), ('pink', 'Pink'), ('purple', 'Purple')], default='yellow', max_length=20)),
                ('agency', models.ForeignKey(help_text='The agency this note belongs to (for additional security)', on_delete=django.db.models.deletion.CASCADE, to='agencies.agency')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='artists.artist')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artist_notes', to='agencies.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtistSocialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('soundcloud_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('bandcamp_url', models.URLField(blank=True)),
                ('artist', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='artists.artist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['agency', 'status'], name='artists_art_agency__64ac3a_idx'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['agency', 'artist_name'], name='artists_art_agency__5c2a39_idx'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['agency', 'artist_type'], name='artists_art_agency__65c73d_idx'),
        ),
        migrations.AddIndex(
            model_name='artist',
            index=models.Index(fields=['is_active'], name='artists_art_is_acti_08a31d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='artist',
            unique_together={('agency', 'email')},
        ),
        migrations.AddIndex(
            model_name='artistmember',
            index=models.Index(fields=['agency', 'artist'], name='artists_art_agency__fa8852_idx'),
        ),
        migrations.AddIndex(
            model_name='artistmember',
            index=models.Index(fields=['passport_number'], name='artists_art_passpor_3a1c73_idx'),
        ),
        migrations.AddIndex(
            model_name='artistmember',
            index=models.Index(fields=['country_of_residence'], name='artists_art_country_cf1b74_idx'),
        ),
        migrations.AddIndex(
            model_name='artistnote',
            index=models.Index(fields=['agency', 'artist'], name='artists_art_agency__a15b5e_idx'),
        ),
        migrations.AddIndex(
            model_name='artistnote',
            index=models.Index(fields=['created_at'], name='artists_art_created_be2fbd_idx'),
        ),
    ]
