# Generated by Django 5.2.4 on 2025-09-04 17:12

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencies', '0002_alter_agency_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('contact_type', models.CharField(choices=[('manager', 'Manager'), ('booking_agent', 'Booking Agent'), ('owner', 'Owner'), ('assistant', 'Assistant'), ('venue_manager', 'Venue Manager'), ('tech_contact', 'Technical Contact'), ('production', 'Production Manager'), ('security', 'Security Manager'), ('catering_manager', 'Catering Manager'), ('promoter_manager', 'Promoter Manager'), ('event_coordinator', 'Event Coordinator'), ('marketing', 'Marketing Manager'), ('logistics', 'Logistics Coordinator'), ('accountant', 'Accountant'), ('lawyer', 'Lawyer'), ('insurance_agent', 'Insurance Agent'), ('bank_contact', 'Bank Contact'), ('vendor', 'Vendor/Supplier'), ('consultant', 'Consultant'), ('other', 'Other')], default='other', max_length=30)),
                ('job_title', models.CharField(blank=True, help_text="Specific job title (e.g., 'Head of Security')", max_length=100)),
                ('department', models.CharField(blank=True, help_text='Department or division', max_length=100)),
                ('reference_type', models.CharField(choices=[('promoter', 'Promoter Contact'), ('venue', 'Venue Contact'), ('agency', 'Agency Contact')], help_text='What type of entity this contact is associated with', max_length=20)),
                ('promoter_id', models.CharField(blank=True, help_text="UUID of related promoter (if reference_type is 'promoter')", max_length=36, null=True)),
                ('venue_id', models.CharField(blank=True, help_text="UUID of related venue (if reference_type is 'venue')", max_length=36, null=True)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp'), ('text', 'Text/SMS')], default='email', max_length=20)),
                ('address', models.TextField(blank=True, help_text='Physical address')),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('whatsapp', models.CharField(blank=True, help_text='WhatsApp number', max_length=50)),
                ('linkedin', models.URLField(blank=True, help_text='LinkedIn profile URL')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary contact for the associated entity')),
                ('is_emergency', models.BooleanField(default=False, help_text='Emergency contact')),
                ('notes', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text="Flexible tags for categorization (e.g., ['VIP', 'After-hours', 'Technical'])")),
                ('timezone', models.CharField(blank=True, max_length=50)),
                ('working_hours', models.CharField(blank=True, help_text="e.g., 'Mon-Fri 9AM-5PM EST'", max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('agency', models.ForeignKey(help_text='The agency that manages this contact', on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='agencies.agency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_contacts', to='agencies.userprofile')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_contacts', to='agencies.userprofile')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['contact_name'],
                'indexes': [models.Index(fields=['agency', 'contact_name'], name='contacts_co_agency__96a72d_idx'), models.Index(fields=['agency', 'contact_type'], name='contacts_co_agency__9840fa_idx'), models.Index(fields=['agency', 'reference_type'], name='contacts_co_agency__d3d57a_idx'), models.Index(fields=['promoter_id'], name='contacts_co_promote_8467a2_idx'), models.Index(fields=['venue_id'], name='contacts_co_venue_i_f61c7b_idx'), models.Index(fields=['is_active'], name='contacts_co_is_acti_0420c9_idx'), models.Index(fields=['is_primary'], name='contacts_co_is_prim_1f0c2a_idx'), models.Index(fields=['created_at'], name='contacts_co_created_71b3b6_idx')],
                'unique_together': {('agency', 'contact_email')},
            },
        ),
    ]
