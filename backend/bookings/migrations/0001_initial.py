# Generated by Django 5.2.4 on 2025-10-06 07:05

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agencies', '0002_alter_agency_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_types', to='agencies.agency')),
            ],
            options={
                'verbose_name': 'Booking Type',
                'verbose_name_plural': 'Booking Types',
                'ordering': ['name'],
                'unique_together': {('agency', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('booking_date', models.DateTimeField(help_text='Date and time of the performance')),
                ('status', models.CharField(choices=[('block', 'Block'), ('confirmed', 'Confirmed'), ('hold', 'Hold'), ('off', 'Off'), ('option', 'Option'), ('pending', 'Pending'), ('private', 'Private'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='option', help_text='Current booking status', max_length=20)),
                ('location_city', models.CharField(help_text='City of the event', max_length=100)),
                ('location_country', django_countries.fields.CountryField(help_text='Country of the event', max_length=2)),
                ('venue_id', models.CharField(help_text='UUID of the venue', max_length=36)),
                ('venue_capacity', models.PositiveIntegerField(help_text='Venue capacity (copied from venue for historical record)', validators=[django.core.validators.MinValueValidator(1)])),
                ('currency', models.CharField(default='USD', help_text='Currency for all financial amounts', max_length=3)),
                ('deal_type', models.CharField(choices=[('landed', 'Landed'), ('all_in', 'All In'), ('plus_plus_plus', '+++'), ('versus', 'Versus'), ('percentage', 'Percentage'), ('guarantee_vs_percentage', 'Guarantee vs Percentage'), ('door_deal', 'Door Deal'), ('other', 'Other')], default='all_in', help_text='Type of deal structure (landed, +++, all-in, etc.)', max_length=30)),
                ('guarantee_amount', models.DecimalField(decimal_places=2, help_text='Guaranteed fee amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional bonus amount (if applicable)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('expenses_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Estimated expenses amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('percentage_split', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage split if applicable (e.g., 80.00 for 80%)', max_digits=5, null=True)),
                ('door_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Door percentage if applicable (e.g., 85.00 for 85% of door)', max_digits=5, null=True)),
                ('artist_id', models.CharField(help_text='UUID of the artist performing', max_length=36)),
                ('promoter_id', models.CharField(help_text='UUID of the promoter organizing the event', max_length=36)),
                ('promoter_contact_id', models.CharField(blank=True, help_text='UUID of the specific promoter contact for this booking', max_length=36, null=True)),
                ('event_name', models.CharField(blank=True, help_text='Name of the event/show', max_length=255)),
                ('show_schedule', models.TextField(blank=True, help_text='Running orders, lineup, roster, schedule details')),
                ('doors_time', models.TimeField(blank=True, help_text='What time doors open', null=True)),
                ('soundcheck_time', models.TimeField(blank=True, help_text='Soundcheck time', null=True)),
                ('performance_start_time', models.TimeField(blank=True, help_text='Performance start time', null=True)),
                ('performance_end_time', models.TimeField(blank=True, help_text='Expected performance end time', null=True)),
                ('contract_status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('signed', 'Signed'), ('cancelled', 'Cancelled')], default='pending', help_text='Status of the booking contract', max_length=20)),
                ('contract_sent_date', models.DateTimeField(blank=True, help_text='When contract was sent', null=True)),
                ('contract_signed_date', models.DateTimeField(blank=True, help_text='When contract was signed', null=True)),
                ('artist_fee_invoice_status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', help_text='Status of invoice TO the artist for their fee', max_length=20)),
                ('artist_fee_invoice_sent_date', models.DateTimeField(blank=True, help_text='When artist fee invoice was sent', null=True)),
                ('artist_fee_invoice_due_date', models.DateField(blank=True, help_text='When artist fee invoice is due', null=True)),
                ('artist_fee_invoice_paid_date', models.DateTimeField(blank=True, help_text='When artist was paid', null=True)),
                ('booking_fee_invoice_status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', help_text='Status of invoice FROM agency to promoter for booking fee', max_length=20)),
                ('booking_fee_invoice_sent_date', models.DateTimeField(blank=True, help_text='When booking fee invoice was sent to promoter', null=True)),
                ('booking_fee_invoice_due_date', models.DateField(blank=True, help_text='When booking fee invoice is due from promoter', null=True)),
                ('booking_fee_invoice_paid_date', models.DateTimeField(blank=True, help_text='When promoter paid booking fee', null=True)),
                ('booking_fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Agency commission/booking fee amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('itinerary_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Status of travel itinerary', max_length=20)),
                ('technical_requirements', models.TextField(blank=True, help_text='Technical requirements for the performance')),
                ('hospitality_requirements', models.TextField(blank=True, help_text='Hospitality and rider requirements')),
                ('travel_requirements', models.TextField(blank=True, help_text='Travel and accommodation requirements')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this booking')),
                ('booking_reference', models.CharField(blank=True, help_text='Unique booking reference number', max_length=50, unique=True)),
                ('is_private', models.BooleanField(default=False, help_text='Mark as private booking')),
                ('is_cancelled', models.BooleanField(default=False, help_text='Whether this booking is cancelled')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for cancellation if applicable')),
                ('cancellation_date', models.DateTimeField(blank=True, help_text='When booking was cancelled', null=True)),
                ('agency', models.ForeignKey(help_text='The agency managing this booking', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='agencies.agency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_bookings', to='agencies.userprofile')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_bookings', to='agencies.userprofile')),
                ('booking_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='bookings.bookingtype')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-booking_date'],
                'indexes': [models.Index(fields=['agency', 'booking_date'], name='bookings_bo_agency__a59d70_idx'), models.Index(fields=['agency', 'status'], name='bookings_bo_agency__e33131_idx'), models.Index(fields=['agency', 'artist_id'], name='bookings_bo_agency__b4b2e5_idx'), models.Index(fields=['agency', 'promoter_id'], name='bookings_bo_agency__898442_idx'), models.Index(fields=['agency', 'venue_id'], name='bookings_bo_agency__3d7deb_idx'), models.Index(fields=['booking_date', 'status'], name='bookings_bo_booking_b730a0_idx'), models.Index(fields=['location_city', 'location_country'], name='bookings_bo_locatio_0f57fe_idx'), models.Index(fields=['contract_status'], name='bookings_bo_contrac_04842b_idx'), models.Index(fields=['artist_fee_invoice_status'], name='bookings_bo_artist__a15ecc_idx'), models.Index(fields=['booking_fee_invoice_status'], name='bookings_bo_booking_3d275a_idx'), models.Index(fields=['is_cancelled'], name='bookings_bo_is_canc_1102cc_idx'), models.Index(fields=['created_at'], name='bookings_bo_created_1720a2_idx')],
            },
        ),
    ]
